% Example of List of colors in Ceptre.
% Backward chaining "for all" and "exists"
% and a second version of "exists" with forward chaining.

% color type.
color   : type.
yellow  : color.
red     : color.
isyellow  color  : bwd.  % Should be able to just use "yellow" and "red",
isyellow  yellow.        % but this is more generalized, since we could just use
notyellow color : bwd.   % any predicates we want to check instead.
notyellow red.

% Input.
ask/all     : pred.
ask/exist   : pred.

% Output.
is/all      : pred.
is/exist    : pred.
not/exist   : pred.

% colors type, list of color
colors              : type.
nil                 : colors.  % Empty list
cons color colors   : colors.  % Recursive case

% Backward chaining "for all"
% P(cs) = ALL c:cs. isyellow(c).
% Would be nice to also provide the predicate "isyellow".
% Wish: P(cs, Q) = ALL c:cs. Q(c).
allyellow colors : bwd.
allyellowZ  : allyellow nil.        % True for the empty list.
allyellowS  : allyellow (cons C Cs) % True for the recursive case
            <- allyellow Cs         % IF: true for the rest
            <- isyellow C.          % IF: true for this element.

% Backward chaining "exists"
% P(cs) = EXIST c:cs. isyellow(c).
existyellow colors : bwd.
existyellowS    : existyellow (cons C Cs) % True for the whole list
                <- existyellow Cs.        % IF: true for the rest.
                                          % OR:
existyellowS2   : existyellow (cons C Cs) % True for the whole list
                <- isyellow C.            % IF: true for this element.

check colors : pred.

stage main = {
% Do backward chaining "For all"
check/all
    : check Cs
    * allyellow Cs
    * ask/all
    -o is/all.

% Do forward chaining "Exists"
check/exist/yes
    : check (cons C Cs)
    * isyellow C
    * ask/exist
    -o is/exist.
check/exist/no
    : check (cons C Cs)
    * notyellow C
    * $ask/exist
    -o check Cs.
check/exist/nil
    : check nil
    * ask/exist
    -o not/exist.

% Do backward chaining "Exists"
check/exist/bwd
    : check Cs
    * existyellow Cs
    * ask/exist
    -o is/exist.
}
#interactive main.
            % Do this     on      [yello, red]
#trace _ main {ask/exist, check (cons yellow (cons red nil))}.
